#Область ПрограммныйИнтерфейс
#Если Клиент И НЕ ВебКлиент Тогда
	
	// Создает структуру, содержащую необходимую информацию для программного запуска 1С.
	//	По умолчанию использует настройки текущего сеанса.
	//
	// Параметры:
	//  ПутьК1С			 - Строка,Неопределено - путь к каталогу, хранящему исполняемые файлы. 
	//  СтрокаСоединения - Строка,Неопределено - строка соединения с информационной базой. См. стандартное СтрокаСоединенияИнформационнойБазы().
	//  ИмяПользователя	 - Строка,Неопределено - имя пользователя информационной базы. По умолчанию - имя текущего пользователя. 
	//  Пароль			 - Строка,Неопределено - пароль пользователя. По умолчанию не заполняется.
	//  Контекст		 - Структура<ПоказатьСкрипт:Булево>,Неопределено - 
	//		"ПоказатьСкрипт" - если истина, то вместо выполнения операции будет сообщен консольный скрипт того, что должно быть выполнено.
	// 
	// Возвращаемое значение:
	//   - 
	//
	Функция НовыйКонтекстВыполнения(ПутьК1С = Неопределено, СтрокаСоединения = Неопределено, ИмяПользователя = Неопределено, Пароль = Неопределено, Контекст = Неопределено) Экспорт  
		КонтекстВыполнения = А1Э_Структуры.Создать(
		"ПутьК1С", ПутьК1С,
		"СтрокаСоединения", СтрокаСоединения,
		"ИмяПользователя", ИмяПользователя,
		"Пароль", Пароль,
		"Контекст", Контекст,
		);
		Если КонтекстВыполнения.ПутьК1С = Неопределено Тогда
			КонтекстВыполнения.ПутьК1С = КаталогПрограммы();
		КонецЕсли;
		Если КонтекстВыполнения.СтрокаСоединения = Неопределено Тогда
			КонтекстВыполнения.СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
		КонецЕсли;
		Если КонтекстВыполнения.ИмяПользователя = Неопределено Тогда
			КонтекстВыполнения.ИмяПользователя = А1Э_Пользователи.ИмяТекущегоПользователяИБ();
		КонецЕсли;
		Возврат КонтекстВыполнения;
	КонецФункции

	// Сохраняет конфигурацию в файл (cf/cfe)
	//
	// Параметры:
	//  ПолноеИмяФайла		 - Строка - имя файла (включая путь), в который будет выполнено сохранение. 
	//  ИмяРасширения		 - Строка - имя расширения, которое будет сохранено. По умолчанию сохраняется конфигурация основной базы.
	//  КонтекстВыполнения	 - Структура,Неопределено - см. РабочийКонтекстВыполнения(). 
	// 
	// Возвращаемое значение:
	//   - Неопределено 
	//
	Функция СохранитьКонфигурациюВФайл(ПолноеИмяФайла, ИмяРасширения = Неопределено, Знач КонтекстВыполнения = Неопределено) Экспорт
		КонтекстКоманды = Новый Массив;
		КонтекстКоманды.Добавить("""" + ПолноеИмяФайла + """");
		Если ЗначениеЗаполнено(ИмяРасширения) Тогда
			КонтекстКоманды.Добавить("-Extension " + ИмяРасширения);
		КонецЕсли;
		
		ВыполнитьКоманду("DumpCfg", КонтекстКоманды, КонтекстВыполнения);
	КонецФункции 
	
	// Сохраняет конфигурацию в файлы (xml/bsl)
	//
	// Параметры:
	//  ПолныйПутьСохранения - Строка - 
	//  ИмяРасширения		 - Строка,Булево - если указана строка, то сохраняет соответствующее расширение. Если Истина, то сохраняет все расширения. 
	//  ИерархическийФормат  - Булево - указывает, использовать ли более новый иерархический формат.
	//  КонтекстВыполнения	 - Структура,Неопределено - см. РабочийКонтекстВыполнения(). 
	// 
	// Возвращаемое значение:
	//   -  
	//
	Функция СохранитьКонфигурациюВФайлы(ПолныйПутьСохранения, ИмяРасширения = Неопределено, ИерархическийФормат = Истина, Знач КонтекстВыполнения = Неопределено) Экспорт
		КонтекстКоманды = Новый Массив;
		КонтекстКоманды.Добавить("""" + ПолныйПутьСохранения + """");
		Если ЗначениеЗаполнено(ИмяРасширения) Тогда
			Если ИмяРасширения = Истина Тогда
				КонтекстКоманды.Добавить("-AllExtensions");
			Иначе
				КонтекстКоманды.Добавить("-Extension " + ИмяРасширения);
			КонецЕсли;
		КонецЕсли;
		Если ИерархическийФормат = Ложь Тогда
			КонтекстКоманды.Добавить("-Format Plain");
		КонецЕсли;
		ВыполнитьКоманду("DumpConfigToFiles", КонтекстКоманды, КонтекстВыполнения);
	КонецФункции 
	
	// Загружает расширение из файлов (xml/bsl).
	//
	// Параметры:
	//  КаталогЗагрузки		 - Строка - 
	//  ИмяРасширения		 - Строка - 
	//  КонтекстВыполнения	 - Структура,Строка - см. РабочийКонтекстВыполнения().
	// 
	// Возвращаемое значение:
	//   - 
	//
	Функция ЗагрузитьРасширениеИзФайлов(КаталогЗагрузки, ИмяРасширения, КонтекстВыполнения = Неопределено) Экспорт
		КонтекстКоманды = Новый Массив;
		КонтекстКоманды.Добавить("""" + КаталогЗагрузки + """");
		КонтекстКоманды.Добавить("-Extension " + ИмяРасширения);
		
		ВыполнитьКоманду("LoadConfigFromFiles", КонтекстКоманды, КонтекстВыполнения);
	КонецФункции
	
	// Загружает расширение из файла (cfe)
	//
	// Параметры:
	//  ПутьКФайлу			 - Строка - 
	//  ИмяРасширения		 - Строка - 
	//  КонтекстВыполнения	 - Структура,Строка - см. РабочийКонтекстВыполнения(). 
	// 
	// Возвращаемое значение:
	//   - 
	//
	Функция ЗагрузитьРасширениеИзФайла(ПутьКФайлу, ИмяРасширения, КонтекстВыполнения = Неопределено) Экспорт
		КонтекстКоманды = Новый Массив;
		КонтекстКоманды.Добавить("""" + ПутьКФайлу + """");
		КонтекстКоманды.Добавить("-Extension " + ИмяРасширения);
		
		ВыполнитьКоманду("LoadCfg", КонтекстКоманды, КонтекстВыполнения);
	КонецФункции
	
	// Удаляет расширение из информационной базы
	//
	// Параметры:
	//  ИмяРасширения		 - Строка - 
	//  КонтекстВыполнения	 - Структура,Строка - см. РабочийКонтекстВыполнения().
	// 
	// Возвращаемое значение:
	//   - 
	//
	Функция УдалитьРасширение(ИмяРасширения, КонтекстВыполнения = Неопределено) Экспорт 
		КонтекстКоманды = Новый Массив;
		КонтекстКоманды.Добавить("-Extension " + ИмяРасширения);
		
		ВыполнитьКоманду("DeleteCfg", КонтекстКоманды, КонтекстВыполнения);
	КонецФункции
	
	// Определяет, открыт ли конфигуратор для текущей информационной базы.
	// 
	// Возвращаемое значение:
	//   - 
	//
	Функция Открыт() Экспорт
		Возврат А1Э_Пользователи.ОткрытКонфигуратор();
	КонецФункции 

#КонецЕсли
#КонецОбласти 

#Область Служебно
#Если Клиент И НЕ ВебКлиент Тогда
	
	Функция ВыполнитьКоманду(ИмяКоманды, КонтекстКоманды = Неопределено, КонтекстВыполнения = Неопределено) Экспорт
		//КонтекстВыполнения строкового типа означает пароль, переданный для выполнения.
		Если КонтекстВыполнения = Неопределено Или ТипЗнч(КонтекстВыполнения) = Тип("Строка") Тогда
			Если А1Э_Пользователи.ОткрытКонфигуратор() Тогда
				Сообщить("Для выполнения команды необходимо закрыть конфигуратор!");
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		РабочийКонтекстВыполнения = РабочийКонтекстВыполнения(КонтекстВыполнения);
		ТекстКоманды = ТекстКоманды(ИмяКоманды, РабочийКонтекстВыполнения, КонтекстКоманды);
		Если А1Э_Структуры.ЗначениеСвойства(РабочийКонтекстВыполнения.Контекст, "ПоказатьСкрипт") = Истина Тогда
			Сообщить(ТекстКоманды);
			Возврат Неопределено;
		КонецЕсли;
				
		А1Э_ОбщееКлиент.ВыполнитьСкрипт(ТекстКоманды);
	КонецФункции
	
	Функция ТекстКоманды(Знач ИмяКоманды, Знач КонтекстВыполнения, Знач КонтекстКоманды = Неопределено) Экспорт  
		Если ТипЗнч(КонтекстВыполнения) = Тип("Строка") Тогда //Это пароль
			КонтекстВыполнения = НовыйКонтекстВыполнения(КонтекстВыполнения);	
		КонецЕсли;
		
		ПараметрыКоманды = "";
		Для Каждого Элемент Из КонтекстКоманды Цикл
			А1Э_Строки.Добавить(ПараметрыКоманды, Элемент, " ");
		КонецЦикла;
		
		Результат = А1Э_Строки.ПоШаблону(
		"""[ПутьК1С]"" DESIGNER /DisableStartupMessages /DisableStartupDialogs /IBConnectionString ""[СтрокаСоединения]"" /N ""[ИмяПользователя]"" /P ""[Пароль]"" /[ИмяКоманды] [ПараметрыКоманды]", 
		А1Э_Структуры.Создать(
		"ПутьК1С", КонтекстВыполнения.ПутьК1С + "1cv8.exe",
		"СтрокаСоединения", СтрЗаменить(КонтекстВыполнения.СтрокаСоединения, """", """"""),
		"ИмяПользователя", КонтекстВыполнения.ИмяПользователя,
		"Пароль", КонтекстВыполнения.Пароль,
		"ИмяКоманды", ИмяКоманды,
		"ПараметрыКоманды", ПараметрыКоманды,
		));
		Возврат Результат;
	КонецФункции
	
	// Функция - Рабочий контекст выполнения
	//
	// Параметры:
	//  КонтекстВыполнения	 - Строка,Структура,Неопределено - если строка, то считается паролем текущего пользователя текущей информационной базы.
	//		Если структура, то может содержать ключи "ПутьК1С", "СтрокаСоединения", "ИмяПользователя", "Пароль".
	//  	Все ключи кроме пароля по умолчанию заполняются для текущего пользователя текущей ИБ и стандартным путем установки 1С.
	//		Указанный в КонтекстеВыполнения пароль заменяет пароль из первого параметра.
	// 
	// Возвращаемое значение:
	//   - 
	//
	Функция РабочийКонтекстВыполнения(КонтекстВыполнения) Экспорт
		Результат = НовыйКонтекстВыполнения();
		//КонтекстВыполнения строкового типа означает пароль, переданный для выполнения.
		Если  ТипЗнч(КонтекстВыполнения) = Тип("Строка") Тогда
			ЗаполнитьЗначенияСвойств(Результат, А1Э_Структуры.Создать(
			"Пароль", КонтекстВыполнения,
			));
		ИначеЕсли КонтекстВыполнения = Неопределено Тогда
		Иначе
			ЗаполнитьЗначенияСвойств(Результат, КонтекстВыполнения);
		КонецЕсли;

		Возврат Результат;
	КонецФункции 
	
#КонецЕсли
#КонецОбласти  

Функция ИмяМодуля() Экспорт
	Возврат	"А1Э_Конфигуратор";
КонецФункции 