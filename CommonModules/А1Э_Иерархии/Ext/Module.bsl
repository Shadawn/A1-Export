// Возвращает значение по глубине иерархии 
// Параметры:
//  Иерархия 		 - Массив,Структура,Соответствие,ДанныеФормыСтруктура,ДанныеФормыКоллекция - 
//  П1				 - Массив,Число,Строка,Ссылка - если массив, то прочие параметры игнорируются.
//  П2 - П10		 - Число,Строка,Ссылка - число если этот уровень иерархии массив или таблица. Строка для Структур, всё остальное - для соответствий.
// 
// 
// Возвращаемое значение:
//   - ЛюбоеЗначение
//
Функция ЗначениеСвойства(Иерархия, П1 = Null, П2 = Null, П3 = Null, П4 = Null, П5 = Null, П6 = Null, П7 = Null, П8 = Null, П9 = Null, П10 = Null) Экспорт
	Возврат __ЗначениеСвойства(Иерархия, Неопределено, П1, П2, П3, П4, П5, П6, П7, П8, П9, П10);
КонецФункции

Функция Свойство(Иерархия, П1 = Null, П2 = Null, П3 = Null, П4 = Null, П5 = Null, П6 = Null, П7 = Null, П8 = Null, П9 = Null, П10 = Null) Экспорт  
	Возврат __ЗначениеСвойства(Иерархия, Null, П1, П2, П3, П4, П5, П6, П7, П8, П9, П10) <> Null;	
КонецФункции

Функция __ЗначениеСвойства(Иерархия, ЗначениеПоУмолчанию = Неопределено, П1 = Null, П2 = Null, П3 = Null, П4 = Null, П5 = Null, П6 = Null, П7 = Null, П8 = Null, П9 = Null, П10 = Null) 
	Если А1Э_Массивы.ЯвляетсяМассивом(П1) Тогда
		МассивПараметров = П1;
	Иначе
		МассивПараметров = А1Э_Массивы.Создать(П1, П2, П3, П4, П5, П6, П7, П8, П9, П10);
	КонецЕсли;
		
	ТекущийУзел = Иерархия;
	Для Сч = 0 По МассивПараметров.Количество() - 1 Цикл
		ТекущийПараметр = МассивПараметров[Сч];
		Если А1Э_Массивы.ЯвляетсяМассивом(ТекущийУзел) Или ТипЗнч(ТекущийУзел) = Тип("ДанныеФормыКоллекция") Тогда
			Если НЕ А1Э_Числа.ЯвляетсяЦелымНеотрицательным(ТекущийПараметр) Тогда Возврат ЗначениеПоУмолчанию; КонецЕсли;
			Если ТекущийПараметр >= ТекущийУзел.Количество() Тогда Возврат ЗначениеПоУмолчанию; КонецЕсли;
		ИначеЕсли А1Э_Структуры.ЯвляетсяСтруктурой(ТекущийУзел) Тогда 
			Если НЕ ТекущийУзел.Свойство(ТекущийПараметр) Тогда Возврат ЗначениеПоУмолчанию; КонецЕсли;
		ИначеЕсли А1Э_Структуры.ЯвляетсяСоответствием(ТекущийУзел) Тогда
		ИначеЕсли ТипЗнч(ТекущийУзел) = Тип("ДанныеФормыСтруктура") Или ТипЗнч(ТекущийУзел) = А1Э_СтандартныеТипы.ФормаКлиентскогоПриложения() Тогда
			Если НЕ А1Э_Общее.Свойство(ТекущийУзел, ТекущийПараметр) Тогда Возврат ЗначениеПоУмолчанию; КонецЕсли;
		Иначе
			Возврат ЗначениеПоУмолчанию;
		КонецЕсли;
		ТекущийУзел = ТекущийУзел[ТекущийПараметр];
	КонецЦикла;
	Возврат ТекущийУзел;
КонецФункции

#Область Фиксированность

// Возвращает зафиксированную версию иерархии. Фиксация происходит по всей глубине, рекурсивно.
// Переданная иерархия не изменяется. Если встречает уже зафиксированные элементы - глубже не идет.
//
// Параметры:
//  Иерархия - Массив, Структура, Соответствие - 
// 
// Возвращаемое значение:
//   - ФиксированныйМассив, ФиксированнаяСтруктура, ФиксированноеСоответствие
//
Функция Зафиксировать(Иерархия) Экспорт
	Возврат __РекурсивнаяФиксация(Иерархия); 
КонецФункции

Функция Дефиксировать(Иерархия) Экспорт
	Возврат __РесурсивнаяДефиксация(Иерархия);
КонецФункции

Функция __РекурсивнаяФиксация(БазовоеЗначение)
	БазовыйТип = ТипЗнч(БазовоеЗначение);
	Если БазовыйТип = Тип("Массив") Тогда
		Результат = Новый Массив;
		Для Каждого Элемент Из БазовоеЗначение Цикл
			Результат.Добавить(__РекурсивнаяФиксация(Элемент));
		КонецЦикла;
		Возврат Новый ФиксированныйМассив(Результат);
	ИначеЕсли БазовыйТип = Тип("Структура") Или БазовыйТип = Тип("Соответствие") Тогда
		Результат = Новый(БазовыйТип);
		Для Каждого Пара Из БазовоеЗначение Цикл
			Результат.Вставить(Пара.Ключ, __РекурсивнаяФиксация(Пара.Значение));
		КонецЦикла;
		Если БазовыйТип = Тип("Структура") Тогда
			Возврат Новый ФиксированнаяСтруктура(Результат);
		Иначе
			Возврат Новый ФиксированноеСоответствие(Результат);
		КонецЕсли;
	Иначе
		Возврат БазовоеЗначение;
	КонецЕсли;
КонецФункции

Функция __РесурсивнаяДефиксация(БазовоеЗначение) 
	БазовыйТип = ТипЗнч(БазовоеЗначение);
	Если БазовыйТип = Тип("ФиксированныйМассив") Тогда
		Результат = Новый Массив;
		Для Каждого Элемент Из БазовоеЗначение Цикл
			Результат.Добавить(__РекурсивнаяФиксация(Элемент));
		КонецЦикла;
		Возврат Результат;
	ИначеЕсли БазовыйТип = Тип("ФиксированнаяСтруктура") Или БазовыйТип = Тип("ФиксированноеСоответствие") Тогда
		Если БазовыйТип = Тип("ФиксированнаяСтруктура") Тогда
			Результат = Новый Структура;
		Иначе
			Результат = Новый Соответствие;
		КонецЕсли;
		Для Каждого Пара Из БазовоеЗначение Цикл
			Результат.Вставить(Пара.Ключ, __РекурсивнаяФиксация(Пара.Значение));
		КонецЦикла;
		Возврат Результат;
	Иначе
		Возврат БазовоеЗначение;
	КонецЕсли;

КонецФункции

Функция ЭтоФиксированная(Иерархия) Экспорт 
	Возврат А1Э_Общее.РавноОдномуИз(ТипЗнч(Иерархия), Тип("ФиксированныйМассив"), Тип("ФиксированноеСоответствие"), Тип("ФиксированнаяСтруктура"));
КонецФункции

#КонецОбласти 

Функция ДобавитьВСоответствиеМассивов(СоответствиеМассивов, Ключ, Значение) Экспорт 
	Массив = СоответствиеМассивов[Ключ]; 
	Если Массив = Неопределено Тогда
		Массив = Новый Массив;
		СоответствиеМассивов.Вставить(Ключ, Массив);
	КонецЕсли;
	Массив.Добавить(Значение);
КонецФункции

Функция ИзЗапроса(Запрос, ОписаниеИерархии)
	//ТУДУ: Реализовать
КонецФункции

Функция ВсеСтрокиДерева(Дерево) Экспорт
	МассивСтрок = Новый Массив;
	Для Каждого Строка Из Дерево.Строки Цикл
		ДобавитьСтрокиДереваВМассивРекурсивно(Строка, МассивСтрок);
	КонецЦикла;
	Возврат МассивСтрок;
КонецФункции

Функция ДобавитьСтрокиДереваВМассивРекурсивно(СтрокаДерева, Массив) Экспорт
	Массив.Добавить(СтрокаДерева);
	Для Каждого ПодчиненнаяСтрока Из СтрокаДерева.Строки Цикл
		ДобавитьСтрокиДереваВМассивРекурсивно(ПодчиненнаяСтрока, Массив);
	КонецЦикла;
КонецФункции 
	
	
	