// BSLLS:CommonModuleInvalidType-off
#Область ПрограммныйИнтерфейс

Функция ДеньМесяцГод(Знач Дата) Экспорт
    Дата = ВДату(Дата);
    Возврат ?(Дата <> Неопределено, Формат(Дата, "ДФ=""дд.ММ.гггг"""), Неопределено);
КонецФункции

// Возвращает строку в формате даты JSON
// Параметры:
//   Дата - Дата
// Возвращаемое значение:
//   Строка
Функция ДляЖСОН(Знач Дата) Экспорт
    Возврат Формат(Дата, "ДФ=""гггг-ММ-ддTчч:мм:сс");
КонецФункции

// Возвращает дату из строки формата JSON
// Параметры:
//   Строка - Строка
// Возвращаемое значение:
//   Дата
Функция ИзЖСОН(Строка) Экспорт
    Возврат Дата(
        Число(Сред(Строка, 1, 4)),
        Число(Сред(Строка, 6, 2)),
        Число(Сред(Строка, 9, 2)),
        Число(Сред(Строка, 12, 2)),
        Число(Сред(Строка, 15, 2)),
        Число(Сред(Строка, 18, 2))
    );
КонецФункции

Функция ВремяДня(Дата) Экспорт
    Возврат Дата - НачалоДня(Дата);
КонецФункции

// Стандартное НачалоНедели неверно работает в веб-клиенте по понедельникам в 8.3.16.1224
//
// Параметры:
//  Дата - Дата
// Возвращаемое значение:
//   Дата
Функция А1Э_НачалоНедели(Дата) Экспорт
    Возврат НачалоДня(НачалоНедели(Дата));
КонецФункции


// Стандартное КонецНедели неверно работает в веб-клиенте по понедельникам в 8.3.16.1224
// Параметры:
//  Дата - Дата
// Возвращаемое значение:
//   Дата
Функция А1Э_КонецНедели(Дата) Экспорт
    Возврат НачалоДня(НачалоНедели(Дата)) + 3600 * 24 * 7 - 1;
КонецФункции

//
Функция ОписаниеТипа(Знач ЧастьДаты = Неопределено) Экспорт
    Если ЧастьДаты = Неопределено Тогда
        Возврат Новый ОписаниеТипов("Дата");
    Иначе
        Если ТипЗнч(ЧастьДаты) = Тип("Строка") Тогда ЧастьДаты = ЧастиДаты[ЧастьДаты] КонецЕсли;
        Возврат Новый ОписаниеТипов("Дата", , , , , Новый КвалификаторыДаты(ЧастьДаты));
    КонецЕсли;
КонецФункции

Функция ИзСтроки(Строка) Экспорт
    Возврат СтрВДату(Строка);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИзСтрокиСтандартнаяБиблиотека
// Преобразует строку в дату
// Параметры:
//   сДата - Строка
// Возвращаемое значение:
//   Дата - Дата
// ©Serg G, публикация ИС 400908
Функция СтрВДату(Знач сДата)
    
    // Массив временных переменных
    Перем п_мТЕМП;
    Перем п_мФорматы;
    
    // Массив для временных переменных
    п_мТЕМП = Новый массив(7);
    
    // -- для локализации
    п_мФорматы = Новый Массив(4);
    п_мФорматы[0] = "г"; // знак года
    п_мФорматы[1] = "ЧЦ=2; ЧН=; ЧВН=";
    п_мФорматы[2] = "ЧГ=0";
    п_мФорматы[3] = "ДФ=МММ";
    // --
    
    Если ПустаяСтрока(сДата) Тогда
        п_мТЕМП[6] = Дата("00010101000000");
        Возврат п_мТЕМП[6];
    КонецЕсли;
    
    // На случай если в формате 1с числом: 20150320220315. (+локализация)
    сДата = Формат(сДата, п_мФорматы[2]);
    
    // Если использовать конструкцию "Если Найти(сДата,..." ,
    // то перебор букв строки будет происходить 2а раза: Найти и СтрЗаменить //Использование Найти
    // в данном случае бессмысленно
    // можно добавить любой разделитель - @, #, %, и тд, неважно. Главное, заменить их на "."
    
    // «1 Фев 05 г.»
    сДата = СтрЗаменить(сДата, "«", "");
    // «1 Фев 05 г.»
    сДата = СтрЗаменить(сДата, "»", "");
    // 1 Фев 05 г. 17:20:00 //просто "г" нельзя из-за "авГуст", например.
    // Но в далее,после парсинга месяца, любое "г" в строке,  удаляется
    сДата = СтрЗаменить(сДата, п_мФорматы[0] + ".", "");
    // 1/2/5
    сДата = СтрЗаменить(сДата, "/", ".");
    // 1\02\05
    сДата = СтрЗаменить(сДата, "\", ".");
    // 1-02-05
    сДата = СтрЗаменить(сДата, "-", ".");
    // 01.02.2005    17:20:00
    сДата = СтрЗаменить(сДата, Символы.Таб, ".");
    // 1/02 2005 17:20:00
    сДата = СтрЗаменить(сДата, " ", ".");
    // Возможны, появление двойных точек из за "янв." в "янв" или из-за " г. ".
    сДата = СтрЗаменить(сДата, "..", ".");
    // строку в нижний регистр, чтоб проще было с Янв Январь янв и тд
    сДата = НРег(СокрЛП(сДата));
    
    п_мТЕМП[0] = СтрНайти(сДата, ".");
    
    Если п_мТЕМП[0] = 0 Тогда
        // если точек нет
        
        Если СтрНайти(сДата, ":") Тогда
            // только время (или ошибка)
            сДата = "01.01.0001." + сДата;
            п_мТЕМП[0] = СтрНайти(сДата, ".");
        Иначе
            // похоже на формат 1с. Можно добавить "попытку"...
            п_мТЕМП[6] = дата(сДата);
            Возврат п_мТЕМП[6];
            
        КонецЕсли;
    КонецЕсли;
    
    // ----- ДНИ -------------------------------------
    п_мТЕМП[0] = Лев(сДата, п_мТЕМП[0] - 1); // дни
    п_мТЕМП[4] = Прав(сДата, СтрДлина(сДата) - СтрДлина(п_мТЕМП[0]) - 1); // месяц и все что справа
    п_мТЕМП[0] = Формат(Число(п_мТЕМП[0]), п_мФорматы[1]); // дни в формат двух чисел
    
    СтрВДату_Месяц(п_мТЕМП);
    
    // -- ГОД
    // Если в строке было "г" без точки("г.")
    п_мТЕМП[4] = СтрЗаменить(п_мТЕМП[4], п_мФорматы[0], "");
    // ищем год. Дата может быть без времени, т.е. год последний в строке
    п_мТЕМП[2] = СтрНайти(п_мТЕМП[4], ".");
    
    Если п_мТЕМП[2] > 0 Тогда
        
        // год
        п_мТЕМП[2] = Лев(п_мТЕМП[4], п_мТЕМП[2] - 1);
        // время и все что справа
        п_мТЕМП[4] = Прав(п_мТЕМП[4], СтрДлина(п_мТЕМП[4]) - СтрДлина(п_мТЕМП[2]) - 1);
    Иначе
        п_мТЕМП[2] = п_мТЕМП[4];
        п_мТЕМП[4] = "";
    КонецЕсли;
    
    // проверяем год
    п_мТЕМП[3] = СтрДлина(п_мТЕМП[2]);
    
    // если год из двух цифр
    Если п_мТЕМП[3] = 2 ИЛИ п_мТЕМП[3] = 1 Тогда
        п_мТЕМП[3] = Число(п_мТЕМП[2]); // год как число
        
        //что означает 15 в "20.03.15"? это 2015г или 1915г? (Настраиваем под себя или выдаём ошибку)
        // в моем варианте если  < 50 то это 2000г. иначе 1900г.
        Если п_мТЕМП[3] < 50 Тогда
            п_мТЕМП[2] = "20" + Формат(п_мТЕМП[3], п_мФорматы[1]);
        Иначе
            п_мТЕМП[2] = "19" + Формат(п_мТЕМП[3], п_мФорматы[1]);
        КонецЕсли;
        
    КонецЕсли;
    
    СтрВДату_Форматирование(п_мТЕМП);
    
    п_мТЕМП[6] = СтрШаблон(
            "%1.%2.%3 %4:%5:%6",
            п_мТЕМП[0],
            п_мТЕМП[1],
            п_мТЕМП[2],
            п_мТЕМП[3],
            п_мТЕМП[4],
            п_мТЕМП[5]
        );
    
    Возврат Дата(п_мТЕМП[6]);
    
КонецФункции

Процедура СтрВДату_Месяц(п_мТЕМП)
    
    // ----- Месяц -----------------------------------
    п_мТЕМП[1] = Лев(п_мТЕМП[4], найти(п_мТЕМП[4], ".") - 1); // месяц
    п_мТЕМП[4] = Прав(п_мТЕМП[4], СтрДлина(п_мТЕМП[4]) - СтрДлина(п_мТЕМП[1]) - 1); // год и все что справа
    
    // Возможны варианты месяца "янв" "янв." "январь" "января"
    // месяц в виде янв или январь
    Если СтрДлина(п_мТЕМП[1]) > 2 Тогда
        
        п_мТЕМП[2] = 0;
        Пока п_мТЕМП[2] < 12 Цикл
            
            п_мТЕМП[2] = п_мТЕМП[2] + 1;
            
            // берем из "янв." только "янв" + локализация
            ДатаСтрокой = Формат(Дата("2001" + Формат(п_мТЕМП[2], п_мФорматы[1]) + "01"), п_мФорматы[3]);
            п_мТЕМП[3] = СтрЗаменить(ДатаСтрокой, ".", "");
            
            п_мТЕМП[3] = СтрНайти(п_мТЕМП[1], п_мТЕМП[3]);
            
            Если п_мТЕМП[3] > 0 Тогда
                п_мТЕМП[1] = Формат(п_мТЕМП[2], п_мФорматы[1]);
                Прервать;
            КонецЕсли;
        КонецЦикла;
    Иначе
        п_мТЕМП[1] = Формат(Число(п_мТЕМП[1]), п_мФорматы[1]);
    КонецЕсли;
    
КонецПроцедуры

Процедура СтрВДату_Форматирование(п_мТЕМП)
    
    // Форматируем время
    // если дата была, например: 17-30-10, то сейчас 17.30.10
    п_мТЕМП[6] = СтрЗаменить(п_мТЕМП[4], ":", ".");
    
    // "попытка" на преобразование даты, по времени,
    // занимает столько же, а по ресурсам больше, чем сам парсинг времени.
    // поэтому, убиваем двух зайцев перебором часы/мин/сек сразу
    Если СтрДлина(п_мТЕМП[6]) > 0 Тогда
        
        п_мТЕМП[5] = СтрНайти(п_мТЕМП[6], ".");
        
        Если п_мТЕМП[5] = 0 Тогда
            п_мТЕМП[3] = "00";
            п_мТЕМП[4] = "00";
            п_мТЕМП[5] = "00";
        Иначе
            СтрВДату_Форматирование_5();
        КонецЕсли;
    КонецЕсли;
    
КонецПроцедуры

Процедура СтрВДату_Форматирование_5()
    
    // часы
    п_мТЕМП[3] = Лев(п_мТЕМП[6], СтрНайти(п_мТЕМП[6], ".") - 1);
    
    // минуты и все что справа
    п_мТЕМП[6] = Прав(п_мТЕМП[6], СтрДлина(п_мТЕМП[6]) - СтрДлина(п_мТЕМП[3]) - 1);
    
    Если п_мТЕМП[3] = "" Тогда
        
        п_мТЕМП[3] = "00";
        
    Иначе
        п_мТЕМП[3] = Формат(Число(п_мТЕМП[6]), п_мФорматы[1]);
        п_мТЕМП[4] = "00";
        п_мТЕМП[5] = "00";
    КонецЕсли;
    
    // Веб-клиент отказывается распознавать дату с часами
    // записанными 1 символом на 1С:Предприятие 8.3 (8.3.16.1063)
    п_мТЕМП[3] = Прав("0" + п_мТЕМП[3], 2);
    
    п_мТЕМП[5] = СтрНайти(п_мТЕМП[6], ".");
    Если п_мТЕМП[5] > 0 Тогда
        // минуты
        п_мТЕМП[4] = Лев(п_мТЕМП[6], СтрНайти(п_мТЕМП[6], ".") - 1);
        
        // секунды и все что справа
        п_мТЕМП[6] = Прав(п_мТЕМП[6], СтрДлина(п_мТЕМП[6]) - СтрДлина(п_мТЕМП[4]) - 1);
        Если п_мТЕМП[4] = "" Тогда
            п_мТЕМП[4] = "00";
        Иначе
            // минуты в формат двух чисел
            п_мТЕМП[4] = Формат(Число(п_мТЕМП[4]), п_мФорматы[1]);
        КонецЕсли;
        
        // секунды
        Если СтрДлина(п_мТЕМП[6]) = 0 Тогда
            п_мТЕМП[5] = "00";
        Иначе
            // секунды в формат двух чисел
            п_мТЕМП[5] = Формат(Число(п_мТЕМП[6]), п_мФорматы[1]);
        КонецЕсли;
        
    Иначе
        п_мТЕМП[4] = Формат(Число(п_мТЕМП[6]), п_мФорматы[1]);
        п_мТЕМП[5] = "00";
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область Служебно

Функция ВДату(Знач Дата)
    Если ТипЗнч(Дата) = Тип("Дата") Тогда
        Возврат Дата;
    ИначеЕсли ТипЗнч(Дата) = Тип("Граница") Тогда
        Возврат Дата.Значение;
    Иначе
        Возврат Неопределено;
    КонецЕсли;
КонецФункции

Процедура СообщитьТекущую() Экспорт
    Сообщение = Новый СообщениеПользователю;
    Сообщение.Текст = "" + ТекущаяДатаСеанса();
    Сообщение.Сообщить();
КонецПроцедуры

#КонецОбласти

#Область Периоды

// Получает количество секунд в периоде
// Параметры:
//   Период - Строка. Допустимые значения "секунда", "минута", "час", "день", "неделя"
// Возвращаемое значение:
//   Число
Функция СекундВПериоде(Знач Период) Экспорт
    Период = НРЕГ(Период);
    Если Период = "секунда" Тогда
        Возврат 1;
    ИначеЕсли Период = "минута" Тогда
        Возврат 60;
    ИначеЕсли Период = "час" Тогда
        Возврат 3600;
    ИначеЕсли Период = "день" Тогда
        Возврат 86400;
    ИначеЕсли Период = "неделя" Тогда
        Возврат 604800;
    Иначе
        А1Э_Служебный.СлужебноеИсключение(
            "Период " + Период + " не является периодом или не имеет однозначной продолжительности"
        );
    КонецЕсли;
КонецФункции

#КонецОбласти
#КонецОбласти